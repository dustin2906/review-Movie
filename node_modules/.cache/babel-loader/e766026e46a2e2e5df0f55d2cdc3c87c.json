{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearningCoding\\\\LearningReact\\\\reactMovie\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status.code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {//... then fetch actors in the setState callback function\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // First fetch the movie...\n\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfoBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FourColGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["E:/LearningCoding/LearningReact/reactMovie/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","status","code","setState","componentDidMount","props","match","params","movieId","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAgC,cAAhC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BS,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,OAAO,EAAE;AAJH,KADoB;;AAAA,SAe5BC,UAf4B,GAedC,QAAD,IAAc;AACzBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AAEd,YAAGA,MAAM,CAACE,MAAP,CAAcC,IAAjB,EAAuB;AACrB,eAAKC,QAAL,CAAc;AAAET,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD,MAEO;AACL,eAAKS,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEQ;AAAT,WAAd,EAAgC,MAAM,CACpC;AACD,WAFD;AAGD;AAEF,OAZD;AAaD,KA7B2B;AAAA;;AAQ5BK,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAd,EADkB,CAElB;;AACA,UAAME,QAAQ,GAAI,GAAEd,OAAQ,SAAQ,KAAKuB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,YAAWzB,OAAQ,iBAAvF;AACA,SAAKY,UAAL,CAAgBC,QAAhB;AACD;;AAkBDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAzC2B;;AA6C9B,eAAepB,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { API_URL, API_KEY} from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true})\r\n    // First fetch the movie...\r\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint) \r\n    .then(result => result.json())\r\n    .then(result => {\r\n\r\n      if(result.status.code) {\r\n        this.setState({ loading: false});\r\n      } else {\r\n        this.setState({ movie: result}, () => {\r\n          //... then fetch actors in the setState callback function\r\n        })\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        <Navigation/>\r\n        <MovieInfo/>\r\n        <MovieInfoBar/>\r\n        <FourColGrid/>\r\n        <Spinner/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}