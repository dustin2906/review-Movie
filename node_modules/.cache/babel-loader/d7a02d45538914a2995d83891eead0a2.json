{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearningCoding\\\\LearningReact\\\\reactMovie\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPage: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      console.log(searchTerm);\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm\n      });\n\n      if (searchTerm === '') {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      let endpoint = '';\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.searchTerm === '') {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n      } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPage: result.total_pages\n        }, () => {\n          if (this.state.searchTerm === \"\") {\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        });\n      }).catch(error => console.error(''));\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('HomeState')) {\n      const state = JSON.parse(localStorage.getItem('HomeState'));\n      this.setState({ ...state\n      });\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, this.state.heroImage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HeroImage, {\n      image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`,\n      title: this.state.heroImage.original_title,\n      text: this.state.heroImage.overview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FourColGrid, {\n      header: this.state.searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, this.state.movies.map((element, i) => {\n      return /*#__PURE__*/React.createElement(MovieThumb, {\n        key: i,\n        clickable: true,\n        image: element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}` : './images/no_image.jpg',\n        movieId: element.id,\n        movieName: element.original_title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }\n      });\n    })), this.state.loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 35\n      }\n    }) : null, this.state.currentPage <= this.state.totalPage && !this.state.loading ? /*#__PURE__*/React.createElement(LoadMoreBtn, {\n      text: \"Load More\",\n      onClick: this.loadMoreItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 88\n      }\n    }) : null));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/LearningCoding/LearningReact/reactMovie/src/components/Home/Home.js"],"names":["React","Component","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPage","searchTerm","searchItems","console","log","endpoint","setState","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","componentDidMount","getItem","parse","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,cAA3B,EAA2CC,WAA3C,EAAwDC,aAAxD,QAA4E,cAA5E;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBZ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3Ba,KAD2B,GACnB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,WAAW,EAAE,CAJP;AAKNC,MAAAA,SAAS,EAAE,CALL;AAMNC,MAAAA,UAAU,EAAE;AANN,KADmB;;AAAA,SAsB3BC,WAtB2B,GAsBZD,UAAD,IAAgB;AAC5BE,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,UAAII,QAAQ,GAAG,EAAf;AACA,WAAKC,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAE,EADI;AAEZE,QAAAA,OAAO,EAAE,IAFG;AAGZG,QAAAA;AAHY,OAAd;;AAMA,UAAGA,UAAU,KAAK,EAAlB,EAAsB;AACpBI,QAAAA,QAAQ,GAAG,GAAEtB,OAAQ,yBAAwBC,OAAQ,wBAArD;AACD,OAFD,MAEO;AACLqB,QAAAA,QAAQ,GAAI,GAAEtB,OAAQ,wBAAuBC,OAAQ,yBAAwBiB,UAAW,EAAxF;AACD;;AACD,WAAKM,UAAL,CAAgBF,QAAhB;AACD,KArC0B;;AAAA,SAuC3BG,aAvC2B,GAuCX,MAAM;AACpB,UAAIH,QAAQ,GAAG,EAAf;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAG,KAAKH,KAAL,CAAWM,UAAX,KAA0B,EAA7B,EAAiC;AAC/BI,QAAAA,QAAQ,GAAI,GAAEtB,OAAQ,yBAAwBC,OAAQ,wBAAuB,KAAKW,KAAL,CAAWI,WAAX,GAAwB,CAAE,EAAvG;AACD,OAFD,MAEO;AACLM,QAAAA,QAAQ,GAAI,GAAEtB,OAAQ,wBAAuBC,OAAQ,yBAAwB,KAAKW,KAAL,CAAWM,UAAW,SAAQ,KAAKN,KAAL,CAAWI,WAAX,GAAyB,CAAE,EAAtI;AACD;;AACD,WAAKQ,UAAL,CAAgBF,QAAhB;AACD,KAjD0B;;AAAA,SAmD3BE,UAnD2B,GAmDbF,QAAD,IAAc;AACzBI,MAAAA,KAAK,CAACJ,QAAD,CAAL,CACCK,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AACd,aAAKL,QAAL,CAAc;AACZV,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,EAAuB,GAAGe,MAAM,CAACE,OAAjC,CADI;AAEZhB,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAAX,IAAwBc,MAAM,CAACE,OAAP,CAAe,CAAf,CAFvB;AAGZf,UAAAA,OAAO,EAAE,KAHG;AAIZC,UAAAA,WAAW,EAAEY,MAAM,CAACG,IAJR;AAKZd,UAAAA,SAAS,EAAEW,MAAM,CAACI;AALN,SAAd,EAMG,MAAM;AACP,cAAG,KAAKpB,KAAL,CAAWM,UAAX,KAA0B,EAA7B,EAAiC;AAC/Be,YAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,KAAKxB,KAApB,CAAlC;AACD;AACF,SAVD;AAWD,OAdD,EAeCyB,KAfD,CAeOC,KAAK,IAAIlB,OAAO,CAACkB,KAAR,CAAc,EAAd,CAfhB;AAgBD,KApE0B;AAAA;;AAU3BC,EAAAA,iBAAiB,GAAG;AAClB,QAAGN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAH,EAAsC;AACpC,YAAM5B,KAAK,GAAGuB,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAX,CAAd;AACA,WAAKjB,QAAL,CAAc,EAAC,GAAGX;AAAJ,OAAd;AACD,KAHD,MAGO;AACL,WAAKW,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMO,QAAQ,GAAI,GAAEtB,OAAQ,yBAAwBC,OAAQ,wBAA5D;AACA,WAAKuB,UAAL,CAAgBF,QAAhB;AACD;AAEF;;AAmDHoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK9B,KAAL,CAAWE,SAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAG,GAAEZ,cAAe,GAAEE,aAAc,GAAE,KAAKQ,KAAL,CAAWE,SAAX,CAAqB6B,aAAc,EADhF;AAEE,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWE,SAAX,CAAqB8B,cAF9B;AAGE,MAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWE,SAAX,CAAqB+B,QAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAK1B,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAQU,IATX,eAUE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWM,UAAX,GAAwB,eAAxB,GAA0C,gBADpD;AAEE,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWG,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKH,KAAL,CAAWC,MAAX,CAAkBiC,GAAlB,CAAuB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACtC,0BAAO,oBAAC,UAAD;AACG,QAAA,GAAG,EAAEA,CADR;AAEG,QAAA,SAAS,EAAE,IAFd;AAGG,QAAA,KAAK,EAAED,OAAO,CAACE,WAAR,GAAuB,GAAE/C,cAAe,GAAEC,WAAY,IAAG4C,OAAO,CAACE,WAAY,EAA7E,GAAgF,uBAH1F;AAIG,QAAA,OAAO,EAAEF,OAAO,CAACG,EAJpB;AAKG,QAAA,SAAS,EAAEH,OAAO,CAACH,cALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KARA,CAJH,CADF,EAeO,KAAKhC,KAAL,CAAWG,OAAX,gBAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAkC,IAfzC,EAgBQ,KAAKH,KAAL,CAAWI,WAAX,IAA0B,KAAKJ,KAAL,CAAWK,SAArC,IAAkD,CAAC,KAAKL,KAAL,CAAWG,OAA/D,gBAA0E,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,KAAKU,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1E,GAAyI,IAhBhJ,CAVF,CADF;AAgCD;;AAxG4B;;AA4G7B,eAAed,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPage: 0,\r\n    searchTerm: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(localStorage.getItem('HomeState')) {\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState({...state});\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    console.log(searchTerm);\r\n    let endpoint = '';\r\n    this.setState({ \r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    })\r\n\r\n    if(searchTerm === '') {\r\n      endpoint =`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if(this.state.searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage +1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      this.setState({\r\n        movies: [...this.state.movies, ...result.results],\r\n        heroImage: this.state.heroImage || result.results[0],\r\n        loading: false,\r\n        currentPage: result.page,\r\n        totalPage: result.total_pages\r\n      }, () => {\r\n        if(this.state.searchTerm === \"\") {\r\n          localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n        }\r\n      })\r\n    })\r\n    .catch(error => console.error(''))\r\n  }\r\n\r\n  \r\nrender() {\r\n  return (\r\n    <div className=\"rmdb-home\">\r\n    {this.state.heroImage ? \r\n      <div>\r\n        <HeroImage \r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n          title={this.state.heroImage.original_title}\r\n          text={this.state.heroImage.overview}\r\n        />\r\n        <SearchBar callback={this.searchItems} />\r\n      </div> : null }\r\n      <div className=\"rmdb-home-grid\">\r\n        <FourColGrid\r\n          header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n          loading={this.state.loading}\r\n          >\r\n          {this.state.movies.map( (element, i) => {\r\n            return <MovieThumb\r\n                      key={i}\r\n                      clickable={true}\r\n                      image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}`: './images/no_image.jpg'} \r\n                      movieId={element.id}\r\n                      movieName={element.original_title}\r\n                    />\r\n          })}\r\n          </FourColGrid>\r\n            {this.state.loading ? <Spinner/> : null}\r\n            {(this.state.currentPage <= this.state.totalPage && !this.state.loading) ? <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> :null }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}